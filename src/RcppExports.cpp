// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// primR_are_equal_f
LogicalVector primR_are_equal_f(NumericVector x, NumericVector y, double eps);
RcppExport SEXP _primitiveR_primR_are_equal_f(SEXP xSEXP, SEXP ySEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(primR_are_equal_f(x, y, eps));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_primitiveR_primR_are_equal_f", (DL_FUNC) &_primitiveR_primR_are_equal_f, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_primitiveR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
